- include_stylesheet('admin/reader')
#settings_table.outset
  %table#settings.index{:cellspacing=>"0", :border=>"0", :cellpadding=>"0"}
    %thead
      %tr
        %th.setting Setting
        %th.value Value (click to edit)
        %th.notes
    %tbody
      - render_region :settings do |settings|
        - settings.registration do
          %tr
            %td.setting.prominent{:colspan => 2}
              = render :partial => 'setting', :locals => {:key => 'reader.allow_registration?', :label => 'Allow visitors to register'}
            %td.notes
          %tr
            %td.setting{:colspan => 2}
              = render :partial => 'setting', :locals => {:key => 'reader.require_confirmation?', :label => 'Require email confirmation'}
            %td.notes
              Highly recommended.
          %tr
            %td.setting
              %p
                Layout for reader-admin pages
            %td.value
              = render :partial => 'setting', :locals => {:key => 'reader.layout'}
            %td.notes
              The radiant layout that will be used to present reader-administration pages
        - settings.site do
          %tr
            %td.setting
              %p
                Site title
            %td.value
              = render :partial => 'setting', :locals => {:key => 'site.title'}
            %td.notes
              This is the name by which forms and emails refer to your site
          %tr
            %td.setting
              %p
                Site url
            %td.value
              = render :partial => 'setting', :locals => {:key => 'site.url'}
            %td.notes
              This is the address we use to build links in emails

        - settings.sender do
          %tr
            %td.setting
              %p
                Email sender
            %td.value
              = render :partial => 'setting', :locals => {:key => 'email.from_name'}
            %td.notes
              This is the name that automatic emails seem to come from
          %tr
            %td.setting
              %p
                Email reply-to
            %td.value
              = render :partial => 'setting', :locals => {:key => 'email.from_address'}
            %td.notes
              This is the address that automatic emails seem to come from

#messages_table.outset      
  %table#messages.index{:cellspacing=>"0", :border=>"0", :cellpadding=>"0"}
    %thead
      %tr
        %th.message Administrative function
        %th.message_subject Email message (click to edit)
        %th.message_body
    %tbody
      - render_region :messages do |messages|
        - messages.administration do
          - MessageFunction.find_all.each do |func|
            - message = Message.for_function(func).shift
            %tr
              %td.message_purpose
                = func.description
              %td.message_subject
                - if message
                  = link_to message.subject, edit_admin_message_url(message)
                - else
                  = link_to image('plus') + " create #{func} message", new_admin_message_url(:function => func), :class => 'create'
              %td.message_body
                - if message
                  = h(truncate(message.body, 80))



